package snowblossom.client;

import java.io.PrintStream;
import java.util.TreeSet;
import snowblossom.lib.*;
import snowblossom.proto.*;

/**
 * The purpose of this class is to be able to call something
 * and test basic functions, designed for integration testing on
 * odd platforms like android or iOS.
 *
 * This is not intended for any other use.  Don't send funds
 * to any addresses generated by this.
 */
public class TestClient
{
  public static void main(String args[]) throws Exception
  {
    runTests(System.out);

  }

  public static void runTests(PrintStream out) throws Exception
  {
    Globals.addCryptoProvider();
    NetworkParams params = new NetworkParamsProd();

    TreeSet<String> options = new TreeSet<>();
    for(String uri : params.getSeedUris())
    {
      options.add(uri);
    }

    long t1 = System.currentTimeMillis();
    StubUtil.ChannelMonitor mon = StubUtil.findFastestChannelMonitor(options, params);
    if (mon == null)
    {
      throw new Exception("Unable to open link to node");
    }
    long t2 = System.currentTimeMillis();
    out.println(String.format("Connected to %s and checked in %s ms",mon.getUri(), t2-t1));


    WalletKeyPair wkp = KeyUtil.generateWalletStandardECKey();
    AddressSpec claim = AddressUtil.getSimpleSpecForKey(wkp);
    String address = AddressUtil.getAddressString(claim, params);

    System.out.println("Address generated: " + address);

    String seed = SeedUtil.generateSeed(12);

    System.out.println("Seed: " + seed);

    WalletKeyPair wkp_seed = SeedUtil.getKey(params, seed, "", 0,0,0);
    AddressSpec claim_seed = AddressUtil.getSimpleSpecForKey(wkp_seed);
    String address_seed = AddressUtil.getAddressString(claim_seed, params);
    System.out.println("Seed address: " + address_seed);

  }

}
